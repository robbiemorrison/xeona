
note

    $Revision: 8635 $
    $Date: 2011-12-25 18:28:45 +0100 (Sun, 25 Dec 2011) $
    $Author: robbie $
    $URL: file:///home/robbie/svn-root/xeona/futz/trunk/xeona1/xeona-xmoks/submodel.26.guard.xem $

    xem-role: submodel

  -------------------------------------------- program admin

program.last-run

    process-id                                    <
    run-kind                                      <
    used-svn                                      <
    timestamp-start (UTC)                         <
    simulate-time (hh:mm:ss or s)                 <
    simulate-return                               <

program.data-format

    minimum-svn                                   > 6057

program.run-script-settings

    script-model-status s                         > "okay"
    script-run-me b                               > 1
    script-option-exittrip i                      > 2
    script-option-nodata b                        > 0
    script-option-jumpy b                         > 0

program.r-processing

    r-policy i                                    > 31
    r-title s                                     > "one element gas pipeline"
    r-plot-list s                                 > ""
    r-highlight-output s                          > ""

  ----------------------------------------------- commentary

      this submodel introduces the notion of cable and socket
      interfaces which support sub-commodities -- in this case
      the 'TeasPipelineGas' entity uses CmOxidGas-- and note
      the need to define the source class, for instance,
      similarly as 'TeasSourceFin::OxidGas'

      moreover the actual commodity carried is a further
      specialization of 'CmOxidGas', namely 'CmOxidNaturalGas'

      the rules:

        * interfaces must be consistent
        * the commodity may be a specialization

  --------------------------------------- mandatory entities

entity.time-horizon

    class                                         > TimeHorizon

      the TimeHorizon entity is REQUIRED and the
      "time-horizon" identifier is MANDATORY

    builtin-remark s                              <

    steps [-] i                                   > 6
    interval [s] i                                > 3600
    start-hour [-] i                              > 0
    start-day [-] i                               > 1
    leap-year [-] b                               > 0

      the interval [300,86400] is further restricted to
      common multiples of one hour ranging 5 mins to 24 hours

      the start-hour begins midnight local time and ranges
      [0,23] and the start-day begins 01-Jan and ranges
      [1,365] -- used to align internal and model timeseries
      when the latter commences after 00:00 on 01 January

      when leap-year is true then 29 February is presumed to
      exist (although not all entities will support this)

    hemisphere s                                  > "N"

      the hemisphere is {N,S} for north and south

      the modeler should ensuring that timeseries data given
      elsewhere aligns with the specification given here

      header: b/builtins.h

entity.overseer

    class                                         > Overseer

      the Overseer entity is REQUIRED and the "overseer"
      identifier is MANDATORY

      the overseer does little more that invoke the various
      originating domains in nominated order at each new
      interval

    builtin-remark s                              <

    captrans-algorithm s                          > "simple"

      captrans-algorithm takes "fixed" | "simple" | "hop-relit"
      but only "simple" is currently implemented (this call
      contains experimental macro-controlled hop-relit code)

    ranked-orig-domains L                         > "domain-controller-1"

      the originating domain controllers must be given in
      order of DESCENDING priority, any unannounced domains
      will be discovered naturally during the various
      traversals

    total-financial [$] f                         < 0.0
    total-greenhouse [kg] f                       < 0.0
    total-nox [kg] f                              < 0.0
    total-depletion [J] f                         < 0.0
    total-landuse [m^2] f                         < 0.0

    total-shortrun-financial [$] f                < 0.0
    total-shortrun-greenhouse [kg] f              < 0.0
    total-shortrun-nox [kg] f                     < 0.0
    total-shortrun-depletion [J] f                < 0.0
    total-shortrun-landuse [m2] f                 < 0.0

      the cost-type totals cover the entire horizon, with
      first step truncation given by program.last-run.run-kind

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..
    embedded-costs-financial [$] F                < 0.0 ..
    variable-costs-greenhouse [kg] F              < 0.0 ..
    fixed-costs-greenhouse [kg] F                 < 0.0 ..
    embedded-costs-greenhouse [kg] F              < 0.0 ..
    variable-costs-nox [kg] F                     < 0.0 ..
    fixed-costs-nox [kg] F                        < 0.0 ..
    embedded-costs-nox [kg] F                     < 0.0 ..
    variable-costs-depletion [J] F                < 0.0 ..
    fixed-costs-depletion [J] F                   < 0.0 ..
    embedded-costs-depletion [J] F                < 0.0 ..
    variable-costs-landuse [m^2] F                < 0.0 ..
    fixed-costs-landuse [m^2] F                   < 0.0 ..
    embedded-costs-landuse [m^2] F                < 0.0 ..

      header: b/overseer.h

  ---------------------------------------------------- model

entity.domain-controller-1

    class                                         > DomainController

      a domain controller entity (the only one provided)
      which can take one of a number of commitment modes --
      but REQUIRES that the managed entities support the
      elected mode

    builtin-remark s                              <

    domain-role s                                 > "role"

    init-scale-problem b                          > 1
    init-use-advanced-initial-basis b             > 1
    init-use-simplex-presolver b                  > 1
    init-use-mip-presolver b                      > 1
    init-apply-numerical-zero b                   > 1

    trip-kkt-report-level i                       > 1
    trip-coeff-span-level i                       > 1

      these four GLPK solver behavior settings should
      normally be set to true unless run-time tests indicate
      otherwise -- also coeffs means structural coefficients

    commitment-mode s                             > "fin"

      supported commitment-mode values (lmp is nodal pricing):
      fin | ghg | nox | dep | luc | lmp | merit | first

    ranked-selgates L                             > ""

      the ranked-selgates (bridging the right side) must be
      null, one, or listed in DESCENDING priority

    asset-operators L                             > "asop-inelastic-ts-1 asop-basic-1"

      the asset-operators may be null, individual, or listed
      in no particular order

    demand-junctions L                            > ""

      the demand-junctions, which split and join demand, may
      be null, individual, or listed in no particular order

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

      the following are consolidations for the entire domain

    subtotal-financial [$] f                      < 0.0
    subtotal-greenhouse [kg] f                    < 0.0
    subtotal-nox [kg] f                           < 0.0
    subtotal-depletion [J] f                      < 0.0
    subtotal-landuse [m2] f                       < 0.0

    header: b/domcon.h

  ------------------------------------------------- demander

entity.asop-inelastic-ts-1

      quantifying extensity * in {J,kg,$} as appropriate

    class                                         > AsopInelasticTs

      asset operator with stated demand and thereby
      price-inelastic behavior

    builtin-remark s                              <

    technical-assets L                            > "teas-load-oxidgas-1"

      the technical-assets should have the same quantifying
      extenstity

    demands [*/s] F                               > 5.0e+06 ..

      the demand needs to be extensity-compatible with the
      associated assets (not checked), in addition each asset
      gets the same value

    header: b/asop03.h

entity.teas-load-oxidgas-1

      shortcut documentation
      base commodity in {Cert,Cseq,Elec,Fund,Heat,Oxid,Thrm,Work}
      quantifying extensity * in {J,kg,$}

    class                                         > TeasLoadFin:OxidGas

      a load entity which is operator coupled for load
      definition, for example to AsopInelasticTs

    builtin-remark s                              <

    socket-1 l                                    > "teas-pipeline-gas-1.oxid-1"

      socket-1 is my supplier

    cable-commodity l                             > "cm-natural-gas-1"

      cable-commodity defines the underlying commodity

    demand-hi-bound [*/s] f                       > 5.0e+06

    loads [*/s] F                                 < 0.0 ..

      demand-hi-bound is the maximum load, loads are the
      actual loads

    nameplate-capacity [*/s] f                    > 6.0e+06
    duty-specific-cost-financial [$/*] f          > 100.0
    size-specific-cost-financial [$/*/s/s] f      > 200.0
    standing-cost-financial [$/s] f               > 300.0

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

    annual-discount-rate-decimal [-] f            > 0.10
    economic-life [y] i                           > 25
    capex-initial [$] f                           > 120e+03
    capex-terminal [$] f                          > -10e+03
    current-age [y] i                             > 2

      a negative capex-terminal indicates salvage revenue as
      opposed to decommissioning cost

    embedded-costs-financial [$] F                < 0.0 ..

      the embedded-costs-financial are calculated using the
      DCF annuity method over the economic life of the entity
      in question

    header: b/teas04.h

  ------------------------------------------------- supplier

entity.asop-basic-1

    class                                         > AsopBasic

      basic asset operator with a null control object and
      without internal cost formation

    builtin-remark s                              <

    technical-assets L                            > "teas-source-oxidgas-1 teas-pipeline-gas-1"

      technical-assets in any order

    header: b/asop01.h

entity.teas-source-oxidgas-1

      shortcut documentation
      base commodity in {Cert,Cseq,Elec,Fund,Heat,Oxid,Thrm,Work}
      quantifying extensity * in {J,kg,$}

    class                                         > TeasSourceFin:OxidGas

      an operator-coupled source entity with support for
      capacity bounds

      my socket is called sock-1

    builtin-remark s                              <

    socket-commodity l                            > "cm-natural-gas-1"

      socket-commodity defines the supplied commodity

    extract-lo-bound [kg/s] f                     > 0.0
    extract-hi-bound [kg/s] f                     > 8.0e+06

      extract-hi-bound is used by the simulation whereas
      nameplate-capacity informs the financial calculations

    extractions [kg] F                            < 0.0 ..

      extractions are the actual extractions

    nameplate-capacity [*/s] f                    > 6.0e+06
    duty-specific-cost-financial [$/*] f          > 100.0
    size-specific-cost-financial [$/*/s/s] f      > 200.0
    standing-cost-financial [$/s] f               > 300.0

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

    annual-discount-rate-decimal [-] f            > 0.10
    economic-life [y] i                           > 25
    capex-initial [$] f                           > 120e+03
    capex-terminal [$] f                          > -10e+03
    current-age [y] i                             > 2

      a negative capex-terminal indicates salvage revenue as
      opposed to decommissioning cost

    embedded-costs-financial [$] F                < 0.0 ..

      the embedded-costs-financial are calculated using the
      DCF annuity method over the economic life of the entity
      in question

    header: b/teas04.h

entity.teas-pipeline-gas-1

    class                                         > TeasPipelineGas

      an asset for transporting gas commodities of type
      CmOxidGas, with self-powered compressor stations and
      support for leakage

      my sockets is called oxid-1

    builtin-remark s                              <

    socket-oxidize l                              > "teas-source-oxidgas-1.sock-1"
    pipe-oxidize-commodity l                      > "cm-natural-gas-1"

      socket-oxidize defines my supplier and their socket
      label and pipe-oxidize-commodity defines the
      transported commodity

    out-hi-bound [kg/s] f                         > 5.0e+06
    pipe-diameter [m] f                           > 400
    pipeline-length [m] f                         > 100e+03
    leakage-factor [kg/ms] f                      > 0.0
    fixed-compressor-usage [kg/ms] f              > 10

      the out-hi-bound sets the pipeline capacity on output,
      the low capacity being zero, pipe-diameter and
      pipeline-length are self-explanatory, the
      leakage-factor is the leakage rate normalized per metre
      of length (perhaps 0.5% overall), and the
      fixed-compressor-load is deemed duty-independent

    inputs [kg/s] F                               < 0.0 ..
    outputs [kg/s] F                              < 0.0 ..
    absolute-leakage-rate [kg/s] f                < 0.0
    relative-leakage-rate [-] f                   < 0.0
    absolute-compressor-usage [kg/s] f            < 0.0
    relative-compressor-usage [kg/s] f            < 0.0

      the above should be self-explanatory

    nameplate-capacity [W] f                      > 5.0e+06
    duty-specific-cost-financial [$/J] f          > 100.0
    size-specific-cost-financial [$/W/s] f        > 200.0
    standing-cost-financial [$/s] f               > 300.0

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

    annual-discount-rate-decimal [-] f            > 0.10
    economic-life [y] i                           > 25
    capex-initial [$] f                           > 120e+03
    capex-terminal [$] f                          > -10e+03
    current-age [y] i                             > 2

      a negative capex-terminal indicates salvage revenue as
      opposed to decommissioning cost

    embedded-costs-financial [$] F                < 0.0 ..

      the embedded-costs-financial are calculated using the
      DCF annuity method over the economic life of the entity
      in question

    header: b/teas08.h

  ---------------------------------------------- commodities

entity.cm-natural-gas-1

    class                                         > CmOxidNaturalGas

      fossil natural gas as CmOxidGas specialization with
      added data range checking

    builtin-remark s                              <

    spec-combustion-enthalpy [J/kg] f             > 54.0e+06
    spec-carbon-dioxide [kg/kg] f                 > 2.74
    spec-co2-equiv [kg/kg] f                      > 2.71
    spec-gwp [kg/kg] f                            > 25.0

      the spec-combustion-enthalpy given here is a typical
      the AR (as received) HHV (higher heating value) for
      natural gas -- the modeler can use other protocols but
      the chosen protocol must be consistent with the
      associated technical assets

      spec-carbon-dioxide describes the post-combustion
      stoichiometry for CCS usage, the spec-co2-equiv
      covers combustion products, and the spec-gwp
      (global warming potential) covers unburnt leakage

    header: b/commods01.h

  ----------------------------------------------------- tail

note

    $Id: submodel.26.guard.xem 8635 2011-12-25 17:28:45Z robbie $

note

    useful emacs text editor settings
    local variables:
      mode: xem
      tab-stop-list: (04 50 52)
      truncate-lines: t
    end:

model-end

