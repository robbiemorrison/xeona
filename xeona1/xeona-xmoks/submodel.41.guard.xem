
note

    $Revision: 9093 $
    $Date: 2012-02-18 22:36:40 +0100 (Sat, 18 Feb 2012) $
    $Author: robbie $
    $URL: file:///home/robbie/svn-root/xeona/futz/trunk/xeona1/xeona-xmoks/submodel.41.guard.xem $

    xem-role   : submodel testing
    xem-status : working, but could be tuned more

 --------------------------------------------- program admin

program.last-run

    process-id                                    <
    run-kind                                      <
    used-svn                                      <
    timestamp-start (UTC)                         <
    simulate-time (hh:mm:ss or s)                 <
    simulate-return                               <

program.data-format

    minimum-svn                                   > 9089

program.run-script-settings

    script-model-status s                         > "okay"
    script-run-me b                               > 1
    script-option-exittrip i                      > 2
    script-option-nodata b                        > 0
    script-option-jumpy b                         > 0

program.r-processing

    r-policy i                                    > 31
    r-title s                                     > "generic storage plus PV with sourcing push and diurnal operator"
    r-plot-list s                                 > "entity.teas-simple-storage-elec-2.closing-inventorys"
    r-highlight-output s                          > ""

program.post-processing

    summarize-list s                              > "entity.teas-simple-storage-elec-2.closing-inventorys entity.teas-pv-installation-1.potential-productions entity.teas-pv-installation-1.actual-productions entity.teas-load-fin-elec-3.loads"

 --------------------------------------------- documentation

      * this model should utilize storage because the PV entity
        has its internal-dump-flag set to false

 ---------------------------------------- mandatory entities

entity.time-horizon

    class                                         > TimeHorizon

      the TimeHorizon entity is REQUIRED and the
      "time-horizon" identifier is MANDATORY

    builtin-remark s                              <

    steps [-] i                                   > 24
  # steps [-] i                                   > 8760
    interval [s] i                                > 3600
    start-hour [-] i                              > 0
    start-day [-] i                               > 1
    leap-year [-] b                               > 0

      the interval [300,86400] is further restricted to
      common multiples of one hour ranging 5 mins to 24 hours

      the start-hour begins midnight local time and ranges
      [0,23] and the start-day begins 01-Jan and ranges
      [1,365] -- used to align internal and model timeseries
      when the latter commences after 00:00 on 01 January

      when leap-year is true then 29 February is presumed to
      exist (although not all entities will support this)

    hemisphere s                                  > "S"

      the hemisphere is {N,S} for north and south

      the modeler should ensuring that timeseries data given
      elsewhere aligns with the specification given here

      header: b/builtins.h

entity.overseer

    class                                         > Overseer

      the Overseer entity is REQUIRED and the "overseer"
      identifier is MANDATORY

      the overseer does little more that invoke the various
      originating domains in nominated order at each new
      interval

    builtin-remark s                              <

    captrans-algorithm s                          > "simple"

      captrans-algorithm takes "fixed" | "simple" | "hop-relit"
      but only "simple" is currently implemented (this call
      contains experimental macro-controlled hop-relit code)

    ranked-orig-domains L                         > "domain-controller-1"

      the originating domain controllers must be given in
      order of DESCENDING priority, any unannounced domains
      will be discovered naturally during the various
      traversals

    total-financial [$] f                         < 0.0
    total-greenhouse [kg] f                       < 0.0
    total-nox [kg] f                              < 0.0
    total-depletion [J] f                         < 0.0
    total-landuse [m^2] f                         < 0.0

    total-shortrun-financial [$] f                < 0.0
    total-shortrun-greenhouse [kg] f              < 0.0
    total-shortrun-nox [kg] f                     < 0.0
    total-shortrun-depletion [J] f                < 0.0
    total-shortrun-landuse [m2] f                 < 0.0

      the cost-type totals cover the entire horizon, with
      first step truncation given by program.last-run.run-kind

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..
    embedded-costs-financial [$] F                < 0.0 ..
    variable-costs-greenhouse [kg] F              < 0.0 ..
    fixed-costs-greenhouse [kg] F                 < 0.0 ..
    embedded-costs-greenhouse [kg] F              < 0.0 ..
    variable-costs-nox [kg] F                     < 0.0 ..
    fixed-costs-nox [kg] F                        < 0.0 ..
    embedded-costs-nox [kg] F                     < 0.0 ..
    variable-costs-depletion [J] F                < 0.0 ..
    fixed-costs-depletion [J] F                   < 0.0 ..
    embedded-costs-depletion [J] F                < 0.0 ..
    variable-costs-landuse [m^2] F                < 0.0 ..
    fixed-costs-landuse [m^2] F                   < 0.0 ..
    embedded-costs-landuse [m^2] F                < 0.0 ..

      header: b/overseer.h

 ----------------------------------------------------- model

entity.domain-controller-1

    class                                         > DomainController

      a domain controller entity (the only one provided)
      which can take one of a number of commitment modes --
      but REQUIRES that the managed entities support the
      elected mode

    builtin-remark s                              <

    domain-role s                                 > "role"

    init-scale-problem b                          > 1
    init-use-advanced-initial-basis b             > 1
    init-use-simplex-presolver b                  > 1
    init-use-mip-presolver b                      > 1
    init-apply-numerical-zero b                   > 1

    trip-kkt-report-level i                       > 1
    trip-coeff-span-level i                       > 1

      these four GLPK solver behavior settings should
      normally be set to true unless run-time tests indicate
      otherwise -- also coeffs means structural coefficients

    commitment-mode s                             > "fin"

      supported commitment-mode values (lmp is nodal pricing):
      fin | ghg | nox | dep | luc | lmp | merit | first

    ranked-selgates L                             > ""

      the ranked-selgates (bridging the right side) must be
      null, one, or listed in DESCENDING priority

    asset-operators L                             > "asop-internal-costs-1 asop-inelastic-param-1"

      the asset-operators may be null, individual, or listed
      in no particular order

    demand-junctions L                            > "junc-demand-2-sym-elec-1"

      the demand-junctions, which split and join demand, may
      be null, individual, or listed in no particular order

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

      the following are consolidations for the entire domain

    subtotal-financial [$] f                      < 0.0
    subtotal-greenhouse [kg] f                    < 0.0
    subtotal-nox [kg] f                           < 0.0
    subtotal-depletion [J] f                      < 0.0
    subtotal-landuse [m2] f                       < 0.0

    header: b/domcon.h

 -------------------------------------------- asset operator

entity.asop-internal-costs-1

    class                                         > AsopInternalCosts

      basic asset operator with a null control objective and
      with internal cost formation

    builtin-remark s                              <

    technical-assets L                            > "teas-pv-installation-1 teas-simple-storage-elec-2"

      the order of the technical-assets is not significant

    standing-cost-financial [$/s] f               > 5.0e-03
    standing-cost-greenhouse [kg/s] f             > 5.0e-03
    standing-cost-nox [kg/s] f                    > 0.0
    standing-cost-depletion [J/s] f               > 0.0
    standing-cost-landuse [m^2/s] f               > 0.0

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

    header: b/asop01.h

 ---------------------------------------------------- source

entity.teas-pv-installation-1

    class                                         > TeasPvInstallation

      a photovoltaic installation comprising one or more
      identical flat panels plus inverter and wiring -- and
      based on the 2010 Sandia photovoltaic array performance
      model

      only Siemens Solar SM55 modules are currently supported
      (but more characterizations can easily be added)

    builtin-remark s                              <

    panel-model [s]                               > "Siemens Solar SM55"
    count [-] i                                   > 200
    panel-zenith [degrees] f                      > 30.0
    panel-azimuth [degrees] f                     > 0.0
    system-loss-factor [-] f                      > 0.2
    site-altitude [m] f                           > 100.0

      the panel-model is the descriptor from the Sandia
      database, the panel-zenith [0,90] is the tilt from
      horizontal, the panel-azimuth [0,360] is the
      orientation relative to north, the system-loss-factor
      accounts for general losses including wiring and
      electronics and is usually [0.1,0.2], and the
      site-altitude need only be approximate

      the site elevation from the solar context, if non-zero,
      will trump the site-altitude

    internal-dump-flag b                          > 0

      if the internal-dump-flag is 1 (true) then internal
      dumping is allowed, else if 0 (false) then the entire
      supply must be taken

    socket-electricity-commodity l                > "cm-electricity-1"

      socket-electricity-commodity defines the shared
      electricity commodity

    ambient-solar-context l                       > "cx-ambient-solar-tmy-1"
    ambient-air-context l                         > "cx-ambient-air-tmy-1"

      the context entities must be sub-classes of
      CxAmbientSolar and CxAmbientAir

    potential-productions [W] F                   < 0.0 ..
    actual-productions [W] F                      < 0.0 ..
    discard [-] f                                 < 0.0

      discard [0,1] is the ratio of discarded to potential
      output

    nameplate-capacity [W] f                      > 5000e+03
    duty-specific-cost-financial [$/J] f          > 1.0
    size-specific-cost-financial [$/W/s] f        > 2.0
    standing-cost-financial [$/s] f               > 3.0

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

    annual-discount-rate-decimal [-] f            > 0.10
    economic-life [y] i                           > 25
    capex-initial [$] f                           > +120e+03
    capex-terminal [$] f                          > -10e+03
    current-age [y] i                             > 2

      a negative capex-terminal indicates salvage revenues as
      opposed to decommissioning cost

    embedded-costs-financial [$] F                < 0.0 ..

    header: b/teas06.h

entity.cx-ambient-solar-tmy-1

    class                                         > CxAmbientSolarTMY

      ambient solar context which serves the NIWA TMY
      (typical meteorological year) dataset for Otago, New
      Zealand

      as currently code, the interval length must be 3600s
      (but adding resampling would be straightforward)

    builtin-remark s                              <

    latitude [deg] f                              < 0
    longitude [deg] f                             < 0
    elevation [m] f                               < 0

    solar-direct [W/m^2] F                        < 0.0 ..
    solar-diffuse [W/m^2] F                       < 0.0 ..
    sun-zenith [degrees] F                        < 0.0 ..
    sun-azimuth [degrees] F                       < 0.0 ..

      solar-direct and solar-diffuse are the solar
      irradiation components, time-based to UTC

    hours-offset [-] i                            > 0
    days-offset [-] i                             > 0

      hours-offset and days-offset are used to vary the
      starting point

    header: e/cxamb02.h

entity.cx-ambient-air-tmy-1

    class                                         > CxAmbientAirTMY

      ambient air context which serves the NIWA TMY (typical
      meteorological year) dataset for Otago, New Zealand

      as currently code, the interval length must be 3600s
      (but adding resampling would be straightforward)

    builtin-remark s                              <

    latitude [deg] f                              < 0
    longitude [deg] f                             < 0
    elevation [m] f                               < 0

    hours-offset [-] i                            > 0
    days-offset [-] i                             > 0
    wind-speed-scale [-] f                        > 1.0
    temperature-shift [C] f                       > 0.0

      hours-offset and days-offset are used to vary the
      starting point

    wind-speeds [m/s] F                           < 0.0 ..
    air-temps [C] F                               < 0.0 ..

    header: e/cxamb01.h

 ------------------------------------------- storage and bus

entity.junc-demand-2-sym-elec-1

      base commodity in {Cert,Cseq,Elec,Fund,Heat,Oxid,Thrm,Work}

    class                                         > JuncDemand2Sym:Elec

      a two socket demand joining junction for given commodity

      my two socket labels are 'sock-1' and 'sock-2'

    builtin-remark s                              <

    socket-1 l                                    > "teas-simple-storage-elec-2.sock-1"
    socket-2 l                                    > "teas-pv-installation-1.elec-1"

      socket-1 and socket-2 are my suppliers

    junction-commodity l                          > "cm-electricity-1"

      junction-commodity defines the underlying commodity

    header: b/junc03.h

entity.teas-simple-storage-elec-2

      base commodity in {Cert,Cseq,Elec,Fund,Heat,Oxid,Thrm,Work}
      or derived commodity in {OxidGas}

    class                                         > TeasSimpleStorage:Elec

      non-proactive storage asset which either stores excess
      supply or discharges under some predefined unit price
      and which will 'spill' if full and this feature is
      enabled

      associated sourcing entities will need to be set their
      internal-dump-flag's to zero to drive recharging

      my socket label is 'sock-1'

    builtin-remark s                              <

    socket l                                      > "junc-demand-2-sym-elec-1.sock-1"

      socket is my supplier (often a busbar for electricity)

    stored-commodity l                            > "cm-electricity-1"

      stored-commodity defines the underlying commodity

    round-trip-effy [-] f                         > 0.70
    half-life [s] f                               > 604800
  # half-life [s] f                               > 0
  # half-life [s] f                               > 1.0e+10

      ** 1e10 seconds is 317 years

      the round-trip-effy accounts for instantaneous storage
      losses, the half-life accounts for inventory decay
      where zero codes for no decay

    capacity [*] f                                > 4.0e+08
    opening-storage [-] f                         > 0.5
    recharge-rate [*/s] f                         > -1.0
    discharge-rate [*/s] f                        > -1.0

      the capacity is self-explanatory, the two rates account
      for rate restrictions, whereby -1.0 means omit

    spill-flag b                                  > 1
    discharge-unit-cost [$/*] f                   > 400.0
  # discharge-unit-cost [$/*] f                   > 0.0

      a spill-flag set to true (1) indicates spilling is
      supported, the discharge-unit-cost (often zero) sets a
      financial cost for discharge

    modes [-] i                                   < 0 ..
    charges [*/s] F                               < 0 ..
    closing-inventorys [*] F                      < 0.0 ..

      the modes {-1,0,+1} indicates discharge, no-change, or
      recharge and closing-inventorys is self-explanatory

    nameplate-capacity [*] f                      > 4.0e+08
    duty-specific-cost-financial [$/J] f          > 100.0
    size-specific-cost-financial [$/W/s] f        > 200.0
    standing-cost-financial [$/s] f               > 300.0

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

    annual-discount-rate-decimal [-] f            > 0.10
    economic-life [y] i                           > 25
    capex-initial [$] f                           > 120e+03
    capex-terminal [$] f                          > -10e+03
    current-age [y] i                             > 2

      a negative capex-terminal indicates salvage revenue as
      opposed to decommissioning cost

    embedded-costs-financial [$] F                < 0.0 ..

      the embedded-costs-financial are calculated using the
      DCF annuity method over the economic life of the entity
      in question

    header: b/teas10.h

 ------------------------------------------------------ load

entity.asop-inelastic-param-1

      quantifying extensity * in {J,kg,$} as appropriate

    class                                         > AsopInelasticParam

      asset operator with generated diurnal demand and
      thereby price-inelastic behavior

    builtin-remark s                              <

    technical-assets L                            > "teas-load-fin-elec-3"

      the technical-assets should have the same quantifying
      extensity

    demand-mean [*/s] f                           > 0.4e+03
    demand-amplitude [*/s] f                      > 0.2e+03
    temporal-shift [h] i                          > 0
    demand-randomness [-] f                       > 0.1
  # demand-randomness [-] f                       > 0.0

      demand-mean is the mean value before noise,
      demand-amplitude is peak-to-peak measure,
      temporal-shift is relative to midnight,
      demand-randomness is the maximum noise relative to the
      amplitude, use zero to disable

    header: b/asop03.h

entity.teas-load-fin-elec-3

      base commodity in {Cert,Cseq,Elec,Fund,Heat,Oxid,Thrm,Work}
      or derived in {OxidBiocoal,OxidGas,OxidHydrogen,OxidNaturalGas}
      quantifying extensity * in {J,kg,$}

    class                                         > TeasLoadFin:Elec

      a load entity which is operator coupled for load
      definition, for example to AsopInelasticTs, and with
      support for financial costs

    builtin-remark s                              <

    socket-1 l                                    > "junc-demand-2-sym-elec-1.sock-2"

      socket-1 is my supplier

    cable-commodity l                             > "cm-electricity-1"

      cable-commodity defines the underlying commodity

    demand-hi-bound [*/s] f                       > 5.0e+03

    loads [*/s] F                                 < 0.0 ..

      demand-hi-bound is the maximum load, loads are the
      actual loads

    nameplate-capacity [*/s] f                    > 5.0e+03
    duty-specific-cost-financial [$/*] f          > 100.0
    size-specific-cost-financial [$/*/s/s] f      > 200.0
    standing-cost-financial [$/s] f               > 300.0

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

    annual-discount-rate-decimal [-] f            > 0.10
    economic-life [y] i                           > 25
    capex-initial [$] f                           > 120e+03
    capex-terminal [$] f                          > -10e+03
    current-age [y] i                             > 2

      a negative capex-terminal indicates salvage revenue as
      opposed to decommissioning cost

    embedded-costs-financial [$] F                < 0.0 ..

      the embedded-costs-financial are calculated using the
      DCF annuity method over the economic life of the entity
      in question

    header: b/teas04.h

 ----------------------------------------------- commodities

entity.cm-electricity-1

    class                                         > CmElectricity

      J-quantified electricity commodity

      technical assets using electricity adopt a DC-power
      flow model and thereby ignore shunt losses -- this
      commodity provides suitable support

    builtin-remark s                              <

    voltage [V] f                                 > 24

      for fixed-frequency AC power, use the RMS (root-mean-
      square) voltage (as opposed to the peak-to-peak value)

    header: b/commods.h

 ------------------------------------------------------ tail

note

    $Id: submodel.41.guard.xem 9093 2012-02-18 21:36:40Z robbie $

note

    useful emacs text editor settings
    local variables:
      mode: xem
      tab-stop-list: (04 50 52)
      truncate-lines: t
    end:

model-end

