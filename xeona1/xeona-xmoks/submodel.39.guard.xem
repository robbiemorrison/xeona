
note

    $Revision: 8635 $
    $Date: 2011-12-25 18:28:45 +0100 (Sun, 25 Dec 2011) $
    $Author: robbie $
    $URL: file:///home/robbie/svn-root/xeona/futz/trunk/xeona1/xeona-xmoks/submodel.39.guard.xem $

    xem-role: submodel development but not fully resolved, see commit r7471 message for some details

 --------------------------------------------- program admin

program.last-run

    process-id                                    <
    run-kind                                      <
    used-svn                                      <
    timestamp-start (UTC)                         <
    simulate-time (hh::mm::ss or s)               <
    simulate-return                               <

program.data-format

    minimum-svn                                   > 7463

program.run-script-settings

    script-model-status s                         > "needs debugging"
    script-run-me b                               > 0
    script-option-exittrip i                      > 2
    script-option-nodata b                        > 0
    script-option-jumpy b                         > 0

program.r-processing

    r-policy i                                    > 31
    r-title s                                     > "prescribed merit order operator"
    r-plot-list s                                 > ""
    r-highlight-output s                          > ""

program.post-processing

    summarize-list s                              > "entity.teas-source-fin-work-1.extractions entity.teas-source-fin-work-2.extractions entity.teas-source-fin-work-3.extractions  entity.teas-source-fin-work-4.extractions entity.asop-inelastic-ts-1.demands"

 ---------------------------------------- mandatory entities

entity.time-horizon

    class                                         > TimeHorizon

      the TimeHorizon entity is REQUIRED and the
      'time-horizon' identifier is MANDATORY

    builtin-remark s                              <

    steps [-] i                                   > 6
    interval [s] i                                > 3600
    start-hour [-] i                              > 0
    start-day [-] i                               > 1
    leap-year [-] b                               > 0

      the interval [300,86400] is further restricted to
      common multiples of one hour ranging 5 mins to 24 hours

      the start-hour begins midnight local time and ranges
      [0,23] and the start-day begins 01-Jan and ranges
      [1,365] -- used to align internal and model timeseries
      when the latter commences after 00:00 on 01 January

      when leap-year is true then 29 February is presumed to
      exist (although not all entities will support this)

    hemisphere s                                  > "N"

      the hemisphere is {N,S} for north and south

      the modeler should ensuring that timeseries data given
      elsewhere aligns with the specification given here

    header: b/builtins.h

entity.overseer

    class                                         > Overseer

      the Overseer entity is REQUIRED and the 'overseer'
      identifier is MANDATORY

      the overseer does little more that invoke the various
      originating domains in nominated order at each new
      interval

    builtin-remark s                              <

    captrans-algorithm s                          > "simple"

      captrans-algorithm takes 'fixed' | 'simple' | 'hop-relit'
      but only 'simple' is currently implemented (this call
      contains experimental macro-controlled hop-relit code)

    ranked-orig-domains L                         > "domain-controller-1"

      the originating domain controllers must be given in
      order of DESCENDING priority, any unannounced domains
      will be discovered naturally during the various
      traversals -- an originating domain must contain at
      least one source entity

    total-financial [$] f                         < 0.0
    total-greenhouse [kg] f                       < 0.0
    total-nox [kg] f                              < 0.0
    total-depletion [J] f                         < 0.0
    total-landuse [m^2] f                         < 0.0

    total-shortrun-financial [$] f                < 0.0
    total-shortrun-greenhouse [kg] f              < 0.0
    total-shortrun-nox [kg] f                     < 0.0
    total-shortrun-depletion [J] f                < 0.0
    total-shortrun-landuse [m2] f                 < 0.0

      the cost-type totals cover the entire horizon, with
      first step truncation given by program.last-run.run-kind

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..
    embedded-costs-financial [$] F                < 0.0 ..
    variable-costs-greenhouse [kg] F              < 0.0 ..
    fixed-costs-greenhouse [kg] F                 < 0.0 ..
    embedded-costs-greenhouse [kg] F              < 0.0 ..
    variable-costs-nox [kg] F                     < 0.0 ..
    fixed-costs-nox [kg] F                        < 0.0 ..
    embedded-costs-nox [kg] F                     < 0.0 ..
    variable-costs-depletion [J] F                < 0.0 ..
    fixed-costs-depletion [J] F                   < 0.0 ..
    embedded-costs-depletion [J] F                < 0.0 ..
    variable-costs-landuse [m^2] F                < 0.0 ..
    fixed-costs-landuse [m^2] F                   < 0.0 ..
    embedded-costs-landuse [m^2] F                < 0.0 ..

    header: b/overseer.h

 -------------------------------------------------- domain 1

entity.domain-controller-1

    class                                         > DomainController

      a domain controller entity (the only one provided)
      which can take one of a number of commitment modes --
      but REQUIRES that the managed entities support the
      elected mode

    builtin-remark s                              <

    domain-role s                                 > "role"

    init-scale-problem b                          > 1
    init-use-advanced-initial-basis b             > 1
    init-use-simplex-presolver b                  > 1
    init-use-mip-presolver b                      > 1
    init-apply-numerical-zero b                   > 1

      these five GLPK solver behavior settings should
      normally be set to true unless run-time tests indicate
      otherwise -- numerical zero rounding applies to both
      input coefficients and output values

    trip-kkt-report-level i                       > 1
    trip-coeff-span-level i                       > 1

      trip-kkt-report-level in { 0 1 2 3 } for no check, then
      report awful, close, and every, trip-coeff-span-level
      in { 0 1 2 } for no check, then report bad and every
      min and max abs coeff from original matrix

    commitment-mode s                             > "merit"

      supported commitment-mode values (lmp is nodal pricing):
      fin | ghg | nox | dep | luc | lmp | merit | first

    ranked-selgates L                             > ""

      the ranked-selgates (bridging the right side) must be
      null, one, or listed in DESCENDING priority

    asset-operators L                             > "asop-prescribed-order-1 asop-inelastic-ts-1"

      the asset-operators may be null, individual, or listed
      in no particular order

    demand-junctions L                            > "junc-demand-2-split-work-1 junc-demand-2-split-work-2 junc-demand-2-split-work-3"

      the demand-junctions, which split and join demand, may
      be null, individual, or listed in no particular order

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

      the following are consolidations for the entire domain

    subtotal-financial [$] f                      < 0.0
    subtotal-greenhouse [kg] f                    < 0.0
    subtotal-nox [kg] f                           < 0.0
    subtotal-depletion [J] f                      < 0.0
    subtotal-landuse [m2] f                       < 0.0

    header: b/domcon.h

 ----------------------------------------------- supply side

entity.asop-prescribed-order-1

    class                                         > AsopPrescribedOrder

      asset operator who implements explicit prescribed order
      operations

    builtin-remark s                              <

    technical-assets L                            > "teas-source-fin-work-1 teas-source-fin-work-2 teas-source-fin-work-3 teas-source-fin-work-4"

      technical-assets given in DESCENDING priority

    cogen-heat-lead-weighting [-] f               > 1.0

      the cogen-lead-heat-weighting [0,1] is passed to any
      co-generation assets to set their lead policy to heat
      (1.0) or power (0.0) or some intermediate ratio

    header: b/asop01.h

entity.teas-source-fin-work-1

      base commodity in {Cert,Cseq,Elec,Fund,Heat,Oxid,Thrm,Work}
      or derived in {OxidBiocoal,OxidGas,OxidHydrogen,OxidNaturalGas}
      quantifying extensity * in {J,kg,$}

    class                                         > TeasSourceFin:Work

      an operator-coupled source entity with support for
      capacity bounds and financial costs

      my socket label is 'sock-1'

    builtin-remark s                              <

    socket-commodity l                            > "cm-work-1"

      socket-commodity defines the supplied commodity

    extract-lo-bound [W] f                        > 0.0
    extract-hi-bound [W] f                        > 3.0e+06

      extract-hi-bound is used by the simulation whereas
      nameplate-capacity informs the financial calculations

    extractions [W] F                             < 0.0 ..

      extractions are the actual extractions

    nameplate-capacity [W] f                      > 8.0e+06
    duty-specific-cost-financial [$/W] f          > 1.0
    size-specific-cost-financial [$/W/s] f        > 2.0
    standing-cost-financial [$/s] f               > 3.0

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

    annual-discount-rate-decimal [-] f            > 0.10
    economic-life [y] i                           > 25
    capex-initial [$] f                           > 120e+03
    capex-terminal [$] f                          > -10e+03
    current-age [y] i                             > 2

      a negative capex-terminal indicates salvage revenue as
      opposed to decommissioning cost

    embedded-costs-financial [$] F                < 0.0 ..

      the embedded-costs-financial are calculated using the
      DCF annuity method over the economic life of the entity
      in question

    header: b/teas04.h

entity.teas-source-fin-work-2

      base commodity in {Cert,Cseq,Elec,Fund,Heat,Oxid,Thrm,Work}
      or derived in {OxidBiocoal,OxidGas,OxidHydrogen,OxidNaturalGas}
      quantifying extensity * in {J,kg,$}

    class                                         > TeasSourceFin:Work

      an operator-coupled source entity with support for
      capacity bounds and financial costs

      my socket label is 'sock-1'

    builtin-remark s                              <

    socket-commodity l                            > "cm-work-1"

      socket-commodity defines the supplied commodity

    extract-lo-bound [W] f                        > 0.0
    extract-hi-bound [W] f                        > 3.0e+06

      extract-hi-bound is used by the simulation whereas
      nameplate-capacity informs the financial calculations

    extractions [W] F                             < 0.0 ..

      extractions are the actual extractions

    nameplate-capacity [W] f                      > 8.0e+06
    duty-specific-cost-financial [$/W] f          > 1.0
    size-specific-cost-financial [$/W/s] f        > 2.0
    standing-cost-financial [$/s] f               > 3.0

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

    annual-discount-rate-decimal [-] f            > 0.10
    economic-life [y] i                           > 25
    capex-initial [$] f                           > 120e+03
    capex-terminal [$] f                          > -10e+03
    current-age [y] i                             > 2

      a negative capex-terminal indicates salvage revenue as
      opposed to decommissioning cost

    embedded-costs-financial [$] F                < 0.0 ..

      the embedded-costs-financial are calculated using the
      DCF annuity method over the economic life of the entity
      in question

    header: b/teas04.h

entity.teas-source-fin-work-3

      base commodity in {Cert,Cseq,Elec,Fund,Heat,Oxid,Thrm,Work}
      or derived in {OxidBiocoal,OxidGas,OxidHydrogen,OxidNaturalGas}
      quantifying extensity * in {J,kg,$}

    class                                         > TeasSourceFin:Work

      an operator-coupled source entity with support for
      capacity bounds and financial costs

      my socket label is 'sock-1'

    builtin-remark s                              <

    socket-commodity l                            > "cm-work-1"

      socket-commodity defines the supplied commodity

    extract-lo-bound [W] f                        > 0.0
    extract-hi-bound [W] f                        > 3.0e+06

      extract-hi-bound is used by the simulation whereas
      nameplate-capacity informs the financial calculations

    extractions [W] F                             < 0.0 ..

      extractions are the actual extractions

    nameplate-capacity [W] f                      > 8.0e+06
    duty-specific-cost-financial [$/W] f          > 1.0
    size-specific-cost-financial [$/W/s] f        > 2.0
    standing-cost-financial [$/s] f               > 3.0

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

    annual-discount-rate-decimal [-] f            > 0.10
    economic-life [y] i                           > 25
    capex-initial [$] f                           > 120e+03
    capex-terminal [$] f                          > -10e+03
    current-age [y] i                             > 2

      a negative capex-terminal indicates salvage revenue as
      opposed to decommissioning cost

    embedded-costs-financial [$] F                < 0.0 ..

      the embedded-costs-financial are calculated using the
      DCF annuity method over the economic life of the entity
      in question

    header: b/teas04.h

entity.teas-source-fin-work-4

      base commodity in {Cert,Cseq,Elec,Fund,Heat,Oxid,Thrm,Work}
      or derived in {OxidBiocoal,OxidGas,OxidHydrogen,OxidNaturalGas}
      quantifying extensity * in {J,kg,$}

    class                                         > TeasSourceFin:Work

      an operator-coupled source entity with support for
      capacity bounds and financial costs

      my socket label is 'sock-1'

    builtin-remark s                              <

    socket-commodity l                            > "cm-work-1"

      socket-commodity defines the supplied commodity

    extract-lo-bound [W] f                        > 0.0
    extract-hi-bound [W] f                        > 3.0e+06

      extract-hi-bound is used by the simulation whereas
      nameplate-capacity informs the financial calculations

    extractions [W] F                             < 0.0 ..

      extractions are the actual extractions

    nameplate-capacity [W] f                      > 8.0e+06
    duty-specific-cost-financial [$/W] f          > 1.0
    size-specific-cost-financial [$/W/s] f        > 2.0
    standing-cost-financial [$/s] f               > 3.0

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

    annual-discount-rate-decimal [-] f            > 0.10
    economic-life [y] i                           > 25
    capex-initial [$] f                           > 120e+03
    capex-terminal [$] f                          > -10e+03
    current-age [y] i                             > 2

      a negative capex-terminal indicates salvage revenue as
      opposed to decommissioning cost

    embedded-costs-financial [$] F                < 0.0 ..

      the embedded-costs-financial are calculated using the
      DCF annuity method over the economic life of the entity
      in question

    header: b/teas04.h

 ---------------------------------------- intermediate links

entity.junc-demand-2-split-work-1

      lowest level (but sorted first)

      base commodity in {Cert,Cseq,Elec,Fund,Heat,Oxid,Thrm,Work}
      or derived in {OxidBiocoal,OxidGas,OxidHydrogen,OxidNaturalGas}

    class                                         > JuncDemand2Split:Work

      a two cable demand splitting junction for given commodity

      my sole socket label is 'sock-1'

    builtin-remark s                              <

    socket-1 l                                    > "junc-demand-2-split-work-2.sock-1"
    socket-2 l                                    > "junc-demand-2-split-work-3.sock-1"

      socket-1 and socket-2 are my two potential suppliers

    junction-commodity l                          > "cm-work-1"

      junction-commodity defines the underlying commodity

    header: b/junc01.h

entity.junc-demand-2-split-work-2

      left at highest level (connecting assets 1 and 2)

      base commodity in {Cert,Cseq,Elec,Fund,Heat,Oxid,Thrm,Work}
      or derived in {OxidBiocoal,OxidGas,OxidHydrogen,OxidNaturalGas}

    class                                         > JuncDemand2Split:Work

      a two cable demand splitting junction for given commodity

      my sole socket label is 'sock-1'

    builtin-remark s                              <

    socket-1 l                                    > "teas-source-fin-work-1.sock-1"
    socket-2 l                                    > "teas-source-fin-work-2.sock-1"

      socket-1 and socket-2 are my two potential suppliers

    junction-commodity l                          > "cm-work-1"

      junction-commodity defines the underlying commodity

    header: b/junc01.h

entity.junc-demand-2-split-work-3

      right at highest level (connecting assets 3 and 4)

      base commodity in {Cert,Cseq,Elec,Fund,Heat,Oxid,Thrm,Work}
      or derived in {OxidBiocoal,OxidGas,OxidHydrogen,OxidNaturalGas}

    class                                         > JuncDemand2Split:Work

      a two cable demand splitting junction for given commodity

      my sole socket label is 'sock-1'

    builtin-remark s                              <

    socket-1 l                                    > "teas-source-fin-work-3.sock-1"
    socket-2 l                                    > "teas-source-fin-work-4.sock-1"

      socket-1 and socket-2 are my two potential suppliers

    junction-commodity l                          > "cm-work-1"

      junction-commodity defines the underlying commodity

    header: b/junc01.h

 ----------------------------------------------- demand-side

entity.asop-inelastic-ts-1

      quantifying extensity * in {J,kg,$} as appropriate

    class                                         > AsopInelasticTs

      asset operator with stated demand and thereby
      price-inelastic behavior

    builtin-remark s                              <

    technical-assets L                            > "teas-load-fin-work-1"

      the technical-assets should have the same quantifying
      extensity

    demands [W] F                                 > 5.0e+06 2.0e+06 ..

      the demand needs to be extensity-compatible with the
      associated assets (not checked), in addition each asset
      gets the same value

    header: b/asop03.h

entity.teas-load-fin-work-1

      base commodity in {Cert,Cseq,Elec,Fund,Heat,Oxid,Thrm,Work}
      or derived in {OxidBiocoal,OxidGas,OxidHydrogen,OxidNaturalGas}
      quantifying extensity * in {J,kg,$}

    class                                         > TeasLoadFin:Work

      a load entity which is operator coupled for load
      definition, for example to AsopInelasticTs, and with
      support for finanicial costs

    builtin-remark s                              <

    socket-1 l                                    > "junc-demand-2-split-work-1.sock-1"

      socket-1 is my supplier

    cable-commodity l                             > "cm-work-1"

      cable-commodity defines the underlying commodity

    demand-hi-bound [W] f                         > 5.0e+06

    loads [W] F                                   < 0.0 ..

      demand-hi-bound is the maximum load, loads are the
      actual loads

    nameplate-capacity [W] f                      > 5.0e+06
    duty-specific-cost-financial [$/W] f          > 1.0
    size-specific-cost-financial [$/W/s] f        > 2.0
    standing-cost-financial [$/s] f               > 3.0

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

    annual-discount-rate-decimal [-] f            > 0.10
    economic-life [y] i                           > 25
    capex-initial [$] f                           > 120e+03
    capex-terminal [$] f                          > -10e+03
    current-age [y] i                             > 2

      a negative capex-terminal indicates salvage revenue as
      opposed to decommissioning cost

    embedded-costs-financial [$] F                < 0.0 ..

      the embedded-costs-financial are calculated using the
      DCF annuity method over the economic life of the entity
      in question

    header: b/teas04.h

 ------------------------------------------------- commodity

entity.cm-work-1

    class                                         > CmWork

      J-quantified state-invariant classic 'W' commodity,
      covering, among other things, shaft power

    builtin-remark s                              <

    header: b/commods.h

 ------------------------------------------------------ tail

note

    $Id: submodel.39.guard.xem 8635 2011-12-25 17:28:45Z robbie $

note

    useful emacs text editor settings
    local variables:
      mode: xem
      tab-stop-list: (04 50 52)
      truncate-lines: t
    end:

model-end

