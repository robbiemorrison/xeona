
note

    $Revision: 8636 $
    $Date: 2011-12-26 10:54:07 +0100 (Mon, 26 Dec 2011) $
    $Author: robbie $
    $URL: file:///home/robbie/svn-root/xeona/futz/trunk/pocmods/poc.003.guard.xem $

    xem-role   : proof-of-concept model for the medium voltage network
    xem-status : work-in-progress

 ------------------------------------------------------ todo

      * progress in general

 --------------------------------------------- program admin

program.last-run

    process-id                                    <
    run-kind                                      <
    used-svn                                      <
    timestamp-start (UTC)                         <
    simulate-time (hh:mm:ss or s)                 <
    simulate-return                               <

program.data-format

    minimum-svn                                   > 6745

program.run-script-settings

    script-model-status s                         > "stale"
    script-run-me b                               > 0
    script-option-exittrip i                      > 2
    script-option-nodata b                        > 0
    script-option-jumpy b                         > 0

program.study-description

    study-name s                                  > ""
    scenario-name s                               > ""
    scenario-author s                             > ""
    scenario-leta s (+,a-z)                       > ""

program.r-processing

    r-policy i                                    > 31
    r-title s                                     > "MV subsystem"
    r-plot-list s                                 > ""
    r-highlight-output s                          > ""

program.post-processing

    summarize-list s                              > ""

 ---------------------------------------- mandatory entities

entity.time-horizon

    class                                         > TimeHorizon

      the TimeHorizon entity is REQUIRED and the
      "time-horizon" identifier is MANDATORY

    builtin-remark s                              <

    steps [-] i                                   > 12
  # steps [-] i                                   > 8760
    interval [s] i                                > 3600
    start-hour [-] i                              > 0
    start-day [-] i                               > 1
    leap-year [-] b                               > 0

      the interval [300,86400] is further restricted to
      common multiples of one hour ranging 5 mins to 24 hours

      the start-hour begins midnight local time and ranges
      [0,23] and the start-day begins 01-Jan and ranges
      [1,365] -- used to align internal and model timeseries
      when the latter commences after 00:00 on 01 January

      when leap-year is true then 29 February is presumed to
      exist (although not all entities will support this)

    hemisphere s                                  > "S"

      the hemisphere is {N,S} for north and south

      the modeler should ensuring that timeseries data given
      elsewhere aligns with the specification given here

      header: b/builtins.h

entity.overseer

    class                                         > Overseer

      the Overseer entity is REQUIRED and the "overseer"
      identifier is MANDATORY

      the overseer does little more that invoke the various
      originating domains in nominated order at each new
      interval

    builtin-remark s                              <

    captrans-algorithm s                          > "simple"

      captrans-algorithm takes "fixed" | "simple" | "hop-relit"
      but only "simple" is currently implemented (this call
      contains experimental macro-controlled hop-relit code)

    ranked-orig-domains L                         > "domain-controller-e"

      the originating domain controllers must be given in
      order of DESCENDING priority, any unannounced domains
      will be discovered naturally during the various
      traversals

    total-financial [$] f                         < 0.0
    total-greenhouse [kg] f                       < 0.0
    total-nox [kg] f                              < 0.0
    total-depletion [J] f                         < 0.0
    total-landuse [m^2] f                         < 0.0

    total-shortrun-financial [$] f                < 0.0
    total-shortrun-greenhouse [kg] f              < 0.0
    total-shortrun-nox [kg] f                     < 0.0
    total-shortrun-depletion [J] f                < 0.0
    total-shortrun-landuse [m2] f                 < 0.0

      the cost-type totals cover the entire horizon, with
      first step truncation given by program.last-run.run-kind

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..
    embedded-costs-financial [$] F                < 0.0 ..
    variable-costs-greenhouse [kg] F              < 0.0 ..
    fixed-costs-greenhouse [kg] F                 < 0.0 ..
    embedded-costs-greenhouse [kg] F              < 0.0 ..
    variable-costs-nox [kg] F                     < 0.0 ..
    fixed-costs-nox [kg] F                        < 0.0 ..
    embedded-costs-nox [kg] F                     < 0.0 ..
    variable-costs-depletion [J] F                < 0.0 ..
    fixed-costs-depletion [J] F                   < 0.0 ..
    embedded-costs-depletion [J] F                < 0.0 ..
    variable-costs-landuse [m^2] F                < 0.0 ..
    fixed-costs-landuse [m^2] F                   < 0.0 ..
    embedded-costs-landuse [m^2] F                < 0.0 ..

      header: b/overseer.h

 ------------ DOMAIN E -------------------------- MV network

entity.domain-controller-e

    class                                         > DomainController

      a domain controller entity (the only one provided)
      which can take one of a number of commitment modes --
      but REQUIRES that the managed entities support the
      elected mode

    builtin-remark s                              <

    domain-role s                                 > "role"

    init-scale-problem b                          > 1
    init-use-advanced-initial-basis b             > 1
    init-use-simplex-presolver b                  > 1
    init-use-mip-presolver b                      > 1
    init-apply-numerical-zero b                   > 1

    trip-kkt-report-level i                       > 1
    trip-coeff-span-level i                       > 1

      these four GLPK solver behavior settings should
      normally be set to true unless run-time tests indicate
      otherwise -- also coeffs means structural coefficients

    commitment-mode s                             > "fin"

      supported commitment-mode values (lmp is nodal pricing):
      fin | ghg | nox | dep | luc | lmp | merit | first

    ranked-selgates L                             > ""

      the ranked-selgates (bridging the right side) must be
      null, one, or listed in DESCENDING priority

    asset-operators L                             > "asop-basic-TMP-e51 asop-inelastic-ts-TMP-e52 asop-internal-costs-e01 asop-internal-costs-e02"

      the asset-operators may be null, individual, or listed
      in no particular order

    demand-junctions L                            > "junc-demand-2-split-elec-e01"

      the demand-junctions, which split and join demand, may
      be null, individual, or listed in no particular order

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

      the following are consolidations for the entire domain

    subtotal-financial [$] f                      < 0.0
    subtotal-greenhouse [kg] f                    < 0.0
    subtotal-nox [kg] f                           < 0.0
    subtotal-depletion [J] f                      < 0.0
    subtotal-landuse [m2] f                       < 0.0

    header: b/domcon.h

 ---------------------------- source (will become a buygate)

entity.asop-basic-TMP-e51

    class                                         > AsopBasic

      basic asset operator with a null control objective and
      without internal cost formation

    builtin-remark s                              <

    technical-assets L                            > "teas-source-elec-TMP-e51"

      technical-assets in any order

    header: b/asop01.h

entity.teas-source-elec-TMP-e51

      base commodity in {Cert,Cseq,Elec,Fund,Heat,Oxid,Thrm,Work}
      or derived commodity in {OxidGas}
      quantifying extensity * in {J,kg,$}

    class                                         > TeasSourceFin:Elec

      an operator-coupled source entity with support for
      capacity bounds

      my socket label is 'sock-1'

    builtin-remark s                              <

    socket-commodity l                            > "cm-electricity-01"

      socket-commodity defines the supplied commodity

    extract-lo-bound [*/s] f                      > 0.0
    extract-hi-bound [*/s] f                      > 8.0e+06

      extract-hi-bound is used by the simulation whereas
      nameplate-capacity informs the financial calculations

    extractions [*/s] F                           < 0.0 ..

      extractions are the actual extractions

    nameplate-capacity [*/s] f                    > 6.0e+06
    duty-specific-cost-financial [$/*] f          > 0.0
    size-specific-cost-financial [$/*/s/s] f      > 0.0
    standing-cost-financial [$/s] f               > 0.0

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

    annual-discount-rate-decimal [-] f            > 0.10
    economic-life [y] i                           > 25
    capex-initial [$] f                           > 120e+03
    capex-terminal [$] f                          > -10e+03
    current-age [y] i                             > 2

      a negative capex-terminal indicates salvage revenue as
      opposed to decommissioning cost

    embedded-costs-financial [$] F                < 0.0 ..

      the embedded-costs-financial are calculated using the
      DCF annuity method over the economic life of the entity
      in question

    header: b/teas04.h

 --------------------------------------- incoming substation

entity.asop-internal-costs-e01

    class                                         > AsopInternalCosts

      basic asset operator with a null control objective and
      with internal cost formation

    builtin-remark s                              <

    technical-assets L                            > "teas-substation-e01 teas-substation-e03"

      the order of the technical-assets is not significant

    standing-cost-financial [$/s] f               > 0.0
    standing-cost-greenhouse [kg/s] f             > 0.0
    standing-cost-nox [kg/s] f                    > 0.0
    standing-cost-depletion [J/s] f               > 0.0
    standing-cost-landuse [m^2/s] f               > 0.0

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

    header: b/asop01.h

entity.teas-substation-e01

    class                                         > TeasSubstation

      substation asset used to step up or down line voltages,
      which also forms losses and costs

      my socket label is 'elec-1'

    builtin-remark s                              <

    socket-electricity l                          > "teas-source-elec-TMP-e51.sock-1"
  # socket-electricity l                          > "gate-00"
    cable-electricity-commodity l                 > "cm-electricity-01"

      the socket-electricity and cable-electricity-commodity
      define my supplier and their socket label and our
      common electricity commodity

    socket-electricity-commodity l                > "cm-electricity-04"

      the socket-electricity-commodity defines the common
      electricity commodity shared with my demander

    out-hi-bound [W] f                            > 5.0e+09
  # out-hi-bound [W] f                            > 5.0e+06
    fixed-efficiency [-] f                        > 0.97
    no-load-loss [W] f                            > 0.0

      the out-hi-bound sets the substation capacity on
      output, the low capacity being zero, fixed-efficiency
      and no-load-loss are self-explanatory

    outputs [W] F                                 < 0.0 ..

    nameplate-capacity [W] f                      > 5.0e+06
    duty-specific-cost-financial [$/J] f          > 0.0
    size-specific-cost-financial [$/W/s] f        > 0.0
    standing-cost-financial [$/s] f               > 0.0

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

    annual-discount-rate-decimal [-] f            > 0.10
    economic-life [y] i                           > 25
    capex-initial [$] f                           > 120e+03
    capex-terminal [$] f                          > -10e+03
    current-age [y] i                             > 2

      a negative capex-terminal indicates salvage revenue as
      opposed to decommissioning cost

    embedded-costs-financial [$] F                < 0.0 ..

      the embedded-costs-financial are calculated using the
      DCF annuity method over the economic life of the entity
      in question

    header: b/teas01.h

 ----------------------------------------- embedded windfarm

entity.asop-internal-costs-e02

    class                                         > AsopInternalCosts

      basic asset operator with a null control objective and
      with internal cost formation

    builtin-remark s                              <

    technical-assets L                            > "teas-windfarm-e02"

      the order of the technical-assets is not significant

    standing-cost-financial [$/s] f               > 0.0
    standing-cost-greenhouse [kg/s] f             > 0.0
    standing-cost-nox [kg/s] f                    > 0.0
    standing-cost-depletion [J/s] f               > 0.0
    standing-cost-landuse [m^2/s] f               > 0.0

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

    header: b/asop01.h

entity.teas-windfarm-e02

    class                                         > TeasWindfarm

      a windfarm comprising one or more identical turbines,
      which can also spill wind

    builtin-remark s                              <

    count [-] i                                   > 5
    turbine-rating [W] f                          > 1000e+03
    lo-cut-speed [m/s] f                          > 3.0
    hi-cut-speed [m/s] f                          > 22.0

      the turbine-rating applies at the cut-out-speed and can
      be multiplied by count to calculate the windfarm capacity

    socket-electricity-commodity l                > "cm-electricity-04"

      socket-electricity-commodity defines the shared
      electricity commodity

    ambient-air-context l                         > "cx-ambient-air-sim-03"

      the context entity must be a sub-class of CxAmbientAir

    potential-productions [W] F                   < 0.0 ..
    actual-productions [W] F                      < 0.0 ..
    availability [-] f                            < 0.0
    spill [-] f                                   < 0.0

      availability [0,1] is the ratio of potential output to
      turbine-rating, spill [0,1] is the ratio of discarded
      to potential output

    nameplate-capacity [W] f                      > 5000e+03
    duty-specific-cost-financial [$/J] f          > 0.0
  # duty-specific-cost-financial [$/J] f          > 50.0
    size-specific-cost-financial [$/W/s] f        > 200.0
    standing-cost-financial [$/s] f               > 300.0

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

    annual-discount-rate-decimal [-] f            > 0.10
    economic-life [y] i                           > 25
    capex-initial [$] f                           > +1.50e+06
    capex-terminal [$] f                          > -0.15e+06
    current-age [y] i                             > 5

      a negative capex-terminal indicates salvage revenues as
      opposed to decommissioning cost

    embedded-costs-financial [$] F                < 0.0 ..

    header: b/teas02.h

entity.cx-ambient-air-sim-03

    class                                         > CxAmbientAirSim

      an ambient air context with wind speeds sampled from a
      stateless Rayleigh distribution -- meaning that the
      prior values do not influence the current values

    builtin-remark s                              <

    mean-wind-speed [m/s] f                       > 10.5
    constant-air-temp [C] f                       > 15.0

      mean-wind-speed is measured at 10m above ground

      constant-air-temp allows this entity to provide
      temperature data in line with the CxAmbientAir
      interface

    wind-speeds [m/s] F                           < 0.0 ..

      the wind-speeds are duly calculated

    header: e/cxamb01.h

 ---------------------------------------------------- busbar

entity.junc-demand-2-split-elec-e01

      base commodity in {Cert,Cseq,Elec,Fund,Heat,Oxid,Thrm,Work}

    class                                         > JuncDemand2Split:Elec

      a two cable demand splitting junction for given commodity

      my sole socket label is 'sock-1'

    builtin-remark s                              <

    socket-1 l                                    > "teas-substation-e01.elec-1"
    socket-2 l                                    > "teas-windfarm-e02.elec-1"

      socket-1 and socket-2 are my two potential suppliers

    junction-commodity l                          > "cm-electricity-04"

      junction-commodity defines the underlying commodity

    header: b/junc01.h

 --------------------------------------- outgoing substation

entity.teas-substation-e03

    class                                         > TeasSubstation

      substation asset used to step up or down line voltages,
      which also forms losses and costs

      my socket label is 'elec-1'

    builtin-remark s                              <

    socket-electricity l                          > "junc-demand-2-split-elec-e01.sock-1"
    cable-electricity-commodity l                 > "cm-electricity-04"

      the socket-electricity and cable-electricity-commodity
      define my supplier and their socket label and our
      common electricity commodity

    socket-electricity-commodity l                > "cm-electricity-05"

      the socket-electricity-commodity defines the common
      electricity commodity shared with my demander

    out-hi-bound [W] f                            > 5.0e+09
  # out-hi-bound [W] f                            > 5.0e+06
    fixed-efficiency [-] f                        > 0.97
    no-load-loss [W] f                            > 0.0

      the out-hi-bound sets the substation capacity on
      output, the low capacity being zero, fixed-efficiency
      and no-load-loss are self-explanatory

    outputs [W] F                                 < 0.0 ..

    nameplate-capacity [W] f                      > 5.0e+06
    duty-specific-cost-financial [$/J] f          > 0.0
    size-specific-cost-financial [$/W/s] f        > 0.0
    standing-cost-financial [$/s] f               > 0.0

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

    annual-discount-rate-decimal [-] f            > 0.10
    economic-life [y] i                           > 25
    capex-initial [$] f                           > 120e+03
    capex-terminal [$] f                          > -10e+03
    current-age [y] i                             > 2

      a negative capex-terminal indicates salvage revenue as
      opposed to decommissioning cost

    embedded-costs-financial [$] F                < 0.0 ..

      the embedded-costs-financial are calculated using the
      DCF annuity method over the economic life of the entity
      in question

    header: b/teas01.h

 ------------------------------ load (will become a selgate)

entity.asop-inelastic-ts-TMP-e52

      quantifying extensity * in {J,kg,$} as appropriate

    class                                         > AsopInelasticTs

      asset operator with stated demand and thereby
      price-inelastic behavior

    builtin-remark s                              <

    technical-assets L                            > "teas-load-elec-TMP-e52"

      the technical-assets should have the same quantifying
      extensity

    demands [*/s] F                               > 5.0e+06 ..

      the demand needs to be extensity-compatible with the
      associated assets (not checked), in addition each asset
      gets the same value

    header: b/asop03.h

entity.teas-load-elec-TMP-e52

      base commodity in {Cert,Cseq,Elec,Fund,Heat,Oxid,Thrm,Work}
      or derived commodity in {OxidGas}
      quantifying extensity * in {J,kg,$}

    class                                         > TeasLoadFin:Elec

      a load entity which is operator coupled for load
      definition, for example to AsopInelasticTs

    builtin-remark s                              <

    socket-1 l                                    > "teas-substation-e03.elec-1"

      socket-1 is my supplier

    cable-commodity l                             > "cm-electricity-05"

      cable-commodity defines the underlying commodity

    demand-hi-bound [*/s] f                       > 5.0e+06

    loads [*/s] F                                 < 0.0 ..

      demand-hi-bound is the maximum load, loads are the
      actual loads

    nameplate-capacity [*/s] f                    > 6.0e+06
    duty-specific-cost-financial [$/*] f          > 0.0
    size-specific-cost-financial [$/*/s/s] f      > 0.0
    standing-cost-financial [$/s] f               > 0.0

    variable-costs-financial [$] F                < 0.0 ..
    fixed-costs-financial [$] F                   < 0.0 ..

    annual-discount-rate-decimal [-] f            > 0.10
    economic-life [y] i                           > 25
    capex-initial [$] f                           > 120e+03
    capex-terminal [$] f                          > -10e+03
    current-age [y] i                             > 2

      a negative capex-terminal indicates salvage revenue as
      opposed to decommissioning cost

    embedded-costs-financial [$] F                < 0.0 ..

      the embedded-costs-financial are calculated using the
      DCF annuity method over the economic life of the entity
      in question

    header: b/teas04.h

 ------------ COMMON 0 ------------------ common commodities

entity.cm-electricity-01

    class                                         > CmElectricity

      J-quantified electricity commodity

      technical assets using electricity adopt a DC-power
      flow model and thereby ignore shunt losses -- this
      commodity provides suitable support

    builtin-remark s                              <

    voltage [V] f                                 > 220.0e+03

      for fixed-frequency AC power, use the RMS (root-mean-
      square) voltage (as opposed to the peak-to-peak value)

    header: b/commods.h

entity.cm-electricity-04

    class                                         > CmElectricity

      J-quantified electricity commodity

      technical assets using electricity adopt a DC-power
      flow model and thereby ignore shunt losses -- this
      commodity provides suitable support

    builtin-remark s                              <

    voltage [V] f                                 > 11.0e+03

      for fixed-frequency AC power, use the RMS (root-mean-
      square) voltage (as opposed to the peak-to-peak value)

    header: b/commods.h

entity.cm-electricity-05

    class                                         > CmElectricity

      J-quantified electricity commodity

      technical assets using electricity adopt a DC-power
      flow model and thereby ignore shunt losses -- this
      commodity provides suitable support

    builtin-remark s                              <

    voltage [V] f                                 > 230

      for fixed-frequency AC power, use the RMS (root-mean-
      square) voltage (as opposed to the peak-to-peak value)

    header: b/commods.h

 ------------------------------------------------------ tail

note

    $Id: poc.003.guard.xem 8636 2011-12-26 09:54:07Z robbie $

note

    useful emacs text editor settings
    local variables:
      mode: xem
      tab-stop-list: (04 50 52)
      truncate-lines: t
    end:

model-end

